searchState.loadedDescShard("lmdb", 0, "Idiomatic and safe APIs for interacting with the Lightning …\nAppend the given item to the end of the database. No key …\nSame as <code>APPEND</code>, but for sorted dup data.\nThe specified DBI was changed unexpectedly.\nInvalid reuse of reader locktable slot.\nTransaction cannot recover - it must be aborted.\nUnsupported size of key/DB name/data, or wrong DUP_FIXED …\nFor <code>Cursor::put</code>. Replace the item at the current cursor …\nLocated page was wrong type.\nAn LMDB cursor.\nCursor stack too deep - internal error.\nThis flag may only be used in combination with <code>DUP_SORT</code>. …\nDuplicate keys may be used in the database. (Or, from …\nA handle to an individual database in an environment.\nDatabase options.\nEnvironment maxdbs reached.\nAn LMDB environment.\nOptions for opening or creating an environment.\nEnvironment options.\nAn iterator that returns an error on every call to …\nAn iterator that returns an error on every call to …\nContains the error value\nAn LMDB error kind.\nUse a fixed address for the mmap region. This flag must be …\nThis option specifies that duplicate data items are also …\nKeys are binary integers in native byte order. Setting …\nAn inactive read-only transaction.\nMDB_Incompatible: Operation and DB incompatible, or DB …\nEnvironment information.\nFile is not a valid LMDB file.\nAn iterator over the key/value pairs in an LMDB database.\nAn iterator over the keys and duplicate values in an LMDB …\nkey/data pair already exists.\nWhen using <code>WRITE_MAP</code>, use asynchronous flushes to disk. As …\nEnvironment mapsize reached.\nDatabase contents grew beyond environment mapsize.\nInsert the new item only if it does not already appear in …\nDo not do any locking. If concurrent access is …\nDo not initialize malloc’d memory before writing to …\nFlush system buffers to disk only once per transaction, …\nInsert the new item only if the key does not already …\nTurn off readahead. Most operating systems perform …\nBy default, LMDB creates its environment in a directory …\nDon’t flush system buffers to disk when committing a …\nDon’t use thread-local storage. Tie reader locktable …\nkey/data pair not found (EOF).\nAn iterator that returns an Item on calls to Iter.next(). …\nAn iterator that returns an Item on calls to Iter.next(). …\nContains the success value\nOther error.\nPage has not enough space - internal error.\nRequested page not found - this usually indicates …\nUpdate of meta page failed or environment had fatal error.\nOpen the environment in read-only mode. No write …\nThis option specifies that duplicate data items should be …\nKeys are strings to be compared in reverse order, from the …\nEnvironment maxreaders reached.\nAn LMDB result.\nA read-only cursor for navigating the items within a …\nAn LMDB read-only transaction.\nA read-write cursor for navigating items within a database.\nAn LMDB read-write transaction.\nEnvironment statistics.\nToo many TLS keys in use - Windows only.\nAn LMDB transaction.\nTxn has too many dirty pages.\nEnvironment version mismatch.\nUse a writeable memory map unless <code>READ_ONLY</code> is set. This …\nWrite options.\nAborts the transaction.\nAborts the transaction.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nBegins a new nested transaction inside of this transaction.\nCreate a read-only transaction for use with the …\nCreate a read-write transaction for use with the …\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nNumber of internal (non-leaf) pages.\nEmpties the given database. All items will be removed.\nCloses the database handle. Normally unnecessary.\nCommits the transaction.\nCommits the transaction.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nOpens a handle to an LMDB database, creating the database …\nOpens a database in the provided transaction, creating it …\nReturns a raw pointer to the underlying LMDB cursor.\nGets the option flags for the given database in the …\nGets the option flags for the given database in the …\nReturns the underlying LMDB database handle.\nDeletes the current key/data pair.\nDeletes an item from a database.\nDepth (height) of the B-tree.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nDrops the database from the environment.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nNumber of data items.\nReturns a raw pointer to the underlying LMDB environment.\nRetrieves the total number of pages on the freelist.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConverts a raw error code to an <code>Error</code>.\nRetrieves a key/data pair from the cursor. Depending on …\nRetrieves a key/data pair from the cursor. Depending on …\nGets an item from a database.\nGets an item from a database.\nRetrieves the set of flags which the database is opened …\nRetrieves info about this environment.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nIterate over database items. The iterator will begin with …\nIterate over database items. The iterator will begin with …\nIterate over duplicate database items. The iterator will …\nIterate over duplicate database items. The iterator will …\nIterate over duplicate items in the database starting from …\nIterate over duplicate items in the database starting from …\nIterate over the duplicates of the item in the database …\nIterate over the duplicates of the item in the database …\nIterate over duplicate database items starting from the …\nIterate over duplicate database items starting from the …\nIterate over database items starting from the given key.\nIterate over database items starting from the given key.\nIterate over database items starting from the beginning of …\nIterate over database items starting from the beginning of …\nLast used page number\nLast transaction ID\nNumber of leaf pages.\nSize of memory map.\nMax reader slots in the environment\nCreates a new builder for specifying options for opening …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nMax reader slots used in the environment\nOpen an environment.\nOpens a handle to an LMDB database.\nOpens a database in the transaction.\nOpens a database in the transaction.\nOpen a new read-only cursor on the given database.\nOpen a new read-only cursor on the given database.\nOpens a new read-write cursor on the given database and …\nOpen an environment with the provided UNIX permissions.\nNumber of overflow pages.\nSize of a database page. This is the same for all …\nPuts a key/data pair into the database. The cursor will be …\nStores an item into a database.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRenews the inactive transaction, returning an active …\nReturns a buffer which can be used to write a value into …\nResets the read-only transaction.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nSets the provided options in the environment.\nSets the size of the memory map to use for the environment.\nSets the size of the memory map to use for the environment.\nSets the maximum number of named databases for the …\nSets the maximum number of threads or reader slots for the …\nRetrieves statistics about this environment.\nRetrieves database statistics.\nRetrieves database statistics.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nFlush data buffers to disk.\nConverts an <code>Error</code> to the raw error code.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns a raw pointer to the underlying LMDB transaction.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nA marker to ensure the iterator doesn’t outlive the …\nThe LMDB cursor with which to iterate.\nThe next and subsequent operations to perform.\nThe first operation to perform when the consumer calls …\nA marker to ensure the iterator doesn’t outlive the …\nThe LMDB cursor with which to iterate.\nThe first operation to perform when the consumer calls …")