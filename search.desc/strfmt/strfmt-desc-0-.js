searchState.loadedDescShard("strfmt", 0, "strfmt crate\nThis trait is effectively an re-implementation for …\nContains the error value\nLOC-error\nThis trait is a shortcut for [strfmt] for an example see …\nContains the success value\nalign getter\nalternate getter\nfill getter\nformat a string using strfmt\nformat a string using strfmt_display see Format::format …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate Formatter from format string\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUNSTABLE: in the future, this may return true if all …\nUNSTABLE: in the future, this may return true if all …\nprecision getter\nset precision to None, used for formatting int, float, etc\nsign getter\nsign minus getter here because it is in fmt::Formatter\nsign plus getter here because it is in fmt::Formatter\ncall this to re-write the original format string verbatum …\nformat the given string onto the buffer\nUNSTABLE+UNTESTED: do not use in your own code (yet) Do …\nRust-style format a string given a <code>HashMap</code> of the …\nFormat a given string with the passed variables. This …\nRust-style format a string given a <code>HashMap</code> of the …\nUNSTABLE: the Formatter object is still considered unstable\nthousands getter\ntype getter\nwidth getter")