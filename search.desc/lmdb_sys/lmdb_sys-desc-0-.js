searchState.loadedDescShard("lmdb_sys", 0, "&lt; Position at first key/data item\n&lt; Position at first data item of current key. Only for …\n&lt; Position at key/data pair. Only for #MDB_DUPSORT\n&lt; position at key, nearest data. Only for #MDB_DUPSORT\n&lt; Return key/data at current cursor position\n&lt; Return up to a page of duplicate data items from current …\n&lt; Position at last key/data item\n&lt; Position at last data item of current key. Only for …\n&lt; Position at next data item\n&lt; Position at next data item of current key. Only for …\n&lt; Return up to a page of duplicate data items from next …\n&lt; Position at first data item of next key\n&lt; Position at previous data item\n&lt; Position at previous data item of current key. Only for …\n&lt; Position at previous page and return up to a page of …\n&lt; Position at last data item of previous key\n&lt; Position at specified key\n&lt; Position at specified key, return key + data\n&lt; Position at first key greater than or equal to specified …\n@brief A callback function for most LMDB assert() failures,\n@brief A callback function used to compare two keys in a …\n@brief Cursor Get operations.\n@brief A handle for an individual database in the DB …\n@brief Information about the environment\n@brief A callback function used to print a message from …\n@brief A callback function used to relocate a …\n@brief Statistics for a database in the environment\n@brief Generic structure used for passing keys and data in …\nNo value.\nNo value.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n@brief Compare two data items according to a particular …\n@brief Close a cursor handle.\n@brief Return count of duplicates for current key.\n@brief Return the cursor’s database handle.\n@brief Delete current key/data pair\n@brief Retrieve by cursor.\n@brief Create a cursor handle.\n@brief Store by cursor.\n@brief Renew a cursor handle.\n@brief Return the cursor’s transaction handle.\n@brief Close a database handle. Normally unnecessary. Use …\n@brief Retrieve the DB flags for a database handle.\n@brief Open a database in the environment.\n@brief Compare two data items according to a particular …\n@brief Delete items from a database.\n@brief Empty or delete+close a database.\n@brief Close the environment and release the memory map.\n@brief Copy an LMDB environment to the specified path.\n@brief Copy an LMDB environment to the specified path, …\n@brief Copy an LMDB environment to the specified file …\n@brief Copy an LMDB environment to the specified file …\n@brief Create an LMDB environment handle.\n@brief Return the filedescriptor for the given environment.\n@brief Get environment flags.\n@brief Get the maximum size of keys and #MDB_DUPSORT data …\n@brief Get the maximum number of threads/reader slots for …\n@brief Return the path that was used in #mdb_env_open().\n@brief Get the application information associated with the …\n@brief Return information about the LMDB environment.\n@brief Open an environment handle.\nSet or reset the assert() callback of the environment. …\n@brief Set environment flags.\n@brief Set the size of the memory map to use for this …\n@brief Set the maximum number of named databases for the …\n@brief Set the maximum number of threads/reader slots for …\n@brief Set application information associated with the …\n@brief Return statistics about the LMDB environment.\n@brief Flush the data buffers to disk.\n@brief Get items from a database.\n@brief Store items into a database.\n@brief Check for stale entries in the reader lock table.\n@brief Dump the entries in the reader lock table.\n@brief Set a custom key comparison function for a database.\n@brief Set a custom data comparison function for a …\n@brief Set a context pointer for a #MDB_FIXEDMAP database…\n@brief Set a relocation function for a #MDB_FIXEDMAP …\n@brief Retrieve statistics for a database.\n@brief Return a string describing a given error code.\n@brief Abandon all the operations of the transaction …\n@brief Create a transaction for use with the environment.\n@brief Commit all the operations of a transaction into the …\n@brief Returns the transaction’s #MDB_env\n@brief Return the transaction’s ID.\n@brief Renew a read-only transaction.\n@brief Reset a read-only transaction.\n@brief Return the LMDB library version information.\n&lt; ID of the last used page\n&lt; ID of the last committed transaction\n&lt; Address of map, if fixed\n&lt; Size of the data memory map\n&lt; max reader slots in the environment\n&lt; max reader slots used in the environment\n&lt; Number of internal (non-leaf) pages\n&lt; Depth (height) of the B-tree\n&lt; Number of data items\n&lt; Number of leaf pages\n&lt; Number of overflow pages\n&lt; Size of a database page. This is currently the same for …\n&lt; address of the data item\n&lt; size of the data item")