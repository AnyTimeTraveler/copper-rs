searchState.loadedDescShard("linux_embedded_hal", 0, "Implementation of <code>embedded-hal</code> traits for Linux devices\nCdev pin re-export Newtype around <code>gpio_cdev::LineHandle</code> …\nCdev pin re-export Error type wrapping …\nA count down timer\nEmpty struct that provides delay functionality on top of …\nAn enumeration of <code>CountDown</code> errors.\nError type wrapping LinuxI2CError to implement …\nNewtype around <code>i2cdev::linux::LinuxI2CDevice</code> that …\nMarker trait that indicates that a timer is periodic\nError type wrapping io::Error to implement …\nNewtype around <code>serialport::TTYPort</code> that implements the …\nError type wrapping io::ErrorKind to implement […\nSpidev wrapper providing the embedded-hal <code>SpiBus</code> trait.\nSpidev wrapper providing the embedded-hal <code>SpiDevice</code> trait.\nA periodic timer based on <code>std::time::Instant</code>, which is a …\nSysfs pin re-export Newtype around <code>sysfs_gpio::Pin</code> that …\nSysfs pin re-export Error type wrapping sysfs_gpio::Error …\nThe unit of time used by this timer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSee <code>sysfs_gpio::Pin::from_path</code> for details.\nFetch inner (concrete) <code>sysfs_gpio::Error</code>\nFetch inner (concrete) <code>gpio_cdev::errors::Error</code>\nFetch inner (concrete) [<code>LinuxI2CError</code>]\nFetch inner (concrete) <code>IoErrorKind</code>\nFetch inner (concrete) [<code>LinuxI2CError</code>]\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this pin to an input pin\nSet this pin to input mode\nConvert this pin to an output pin\nSet this pin to output mode\nSee <code>sysfs_gpio::Pin::new</code> for details.\nSee <code>gpio_cdev::Line::request</code> for details.\nSee <code>i2cdev::linux::LinuxI2CDevice::new</code> for details.\nCreate a new timer instance.\nOpen a <code>serialport::TTYPort</code> by providing the port path and …\nSee <code>spidev::Spidev::open</code> for details.\nSee <code>spidev::Spidev::open</code> for details.\nOpen a <code>serialport::TTYPort</code> by providing …\nStarts a new count down\nPerform a transaction against the device. Read more\nNon-blockingly “waits” until the count down finishes")