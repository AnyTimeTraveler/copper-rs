searchState.loadedDescShard("spidev", 0, "Spidev\nSI/SO Signals Shared\nClock Phase\nClock Polarity\nChipselect Active High?\nLoopback Mode\nPer-word Bits On Wire\n1 dev/bus; no chipselect\nSlave pulls low to pause\nReceive with 2 wires\nReceive with 4 wires\nTransmit with 2 wires\nTransmit with 4 wires\nProvide high-level access to Linux Spidev Driver\nOptions that control defaults for communication on a device\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe number of bits in each SPI transfer word\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nFinalize and build the SpidevOptions\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWrite the provided configuration to this device\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a reference to the underlying <code>File</code> object\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the object and get the underlying <code>File</code> object\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bit justification used to transfer SPI words\nThe maximum SPI transfer speed, in Hz\nSet the SPI Transfer Mode\nWrap an already opened <code>File</code> for use as an spidev\nCreate a new, empty set of options\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nOpen the spidev device with the provided path\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nPerform a single transfer\nPerform multiple transfers in a single system call to the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nRepresentation of a spidev transfer that is shared with …\nCreate a delay transfer of a number of microseconds\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a read transfer\nCreate a read/write transfer. Note that the <code>tx_buf</code> and …\nStructure that is used when performing communication with …\nCreate a write transfer")