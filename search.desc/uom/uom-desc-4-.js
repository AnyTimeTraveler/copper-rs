searchState.loadedDescShard("uom", 4, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nImperial gallons per second\nImperial gallons per second\ngallons per day\ngallons per day\ngallons per minute\ngallons per minute\ngallons per second\ngallons per second\nRetrieve the value of the quantity in the given …\ngigaliters per second\ngigaliters per second\nImperial gills per second\nImperial gills per second\ngills per second\ngills per second\nhectoliters per second\nhectoliters per second\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a struct that formats <code>self</code> for display.\nkiloliters per second\nkiloliters per second\nliters per minute\nliters per minute\nliters per second\nliters per second\nmegaliters per second\nmegaliters per second\nmicroliters per second\nmicroliters per second\nmilliliters per second\nmilliliters per second\nnanoliters per second\nnanoliters per second\nCreate a new quantity from the given value and measurement …\npecks per second\npecks per second\npetaliters per second\npetaliters per second\npicoliters per second\npicoliters per second\ndry pints per second\ndry pints per second\nliquid pints per second\nliquid pints per second\nUnit plural description.\ndry quarts per second\ndry quarts per second\nliquid quarts per second\nliquid quarts per second\nregister tons per second\nregister tons per second\nReturns the nearest integer to a number in the in given …\nUnit singular description.\nsteres per second\nsteres per second\ntablespoons per second\ntablespoons per second\nteaspoons per second\nteaspoons per second\nteraliters per second\nteraliters per second\nReturns the integer part of a number in the given …\nIterate over all defined units for this quantity.\nQuantity base units. See <code>Units</code>.\nQuantity value stored in the base units for the quantity.\nyoctoliters per second\nyoctoliters per second\nyottaliters per second\nyottaliters per second\nzeptoliters per second\nzeptoliters per second\nzettaliters per second\nzettaliters per second\nTrait to identify units which have a conversion factor for …\nDimension of volumetric density of states, …\nMarker trait to identify measurement units for the …\nUnit enum.\nVolumetric density of states (base unit 1 / cubic meter …\nUnit abbreviation.\nReturns the smallest integer less than or equal to a …\nQuantity description.\nQuantity dimension. See <code>Dimension</code>.\nReturns the largest integer less than or equal to a number …\nCreates a struct that can be used to format a compatible …\nReturns the fractional part of a number in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the value of the quantity in the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a struct that formats <code>self</code> for display.\nCreate a new quantity from the given value and measurement …\nUnit plural description.\nReturns the nearest integer to a number in the in given …\nUnit singular description.\nstates per cubic centimeter electronvolt\nstates per cubic centimeter electronvolt\nstates per cubic centimeter joule\nstates per cubic centimeter joule\nstates per cubic meter joule\nstates per cubic meter joule\nReturns the integer part of a number in the given …\nIterate over all defined units for this quantity.\nQuantity base units. See <code>Units</code>.\nQuantity value stored in the base units for the quantity.\nTrait to identify units which have a conversion factor for …\nDimension of volumetric heat capacity, …\nMarker trait to identify measurement units for the …\nUnit enum.\nVolumetric heat capacity (base unit joule per cubic meter …\nUnit abbreviation.\ncalories per cubic meter kelvin\ncalories per cubic meter kelvin\nReturns the smallest integer less than or equal to a …\nQuantity description.\nQuantity dimension. See <code>Dimension</code>.\nReturns the largest integer less than or equal to a number …\nCreates a struct that can be used to format a compatible …\nReturns the fractional part of a number in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the value of the quantity in the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a struct that formats <code>self</code> for display.\njoules per cubic meter kelvin\njoules per cubic meter kelvin\nCreate a new quantity from the given value and measurement …\nUnit plural description.\nReturns the nearest integer to a number in the in given …\nUnit singular description.\nReturns the integer part of a number in the given …\nIterate over all defined units for this quantity.\nQuantity base units. See <code>Units</code>.\nQuantity value stored in the base units for the quantity.\nTrait to identify units which have a conversion factor for …\nDimension of volumetric number density, L⁻³ (base unit …\nMarker trait to identify measurement units for the …\nUnit enum.\nVolumetric number density (base unit 1 per cubic meter, …\nUnit abbreviation.\nReturns the smallest integer less than or equal to a …\nQuantity description.\nQuantity dimension. See <code>Dimension</code>.\nReturns the largest integer less than or equal to a number …\nCreates a struct that can be used to format a compatible …\nReturns the fractional part of a number in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the value of the quantity in the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a struct that formats <code>self</code> for display.\nCreate a new quantity from the given value and measurement …\nper centiliter\nper centiliter\nper cubic centimeter\nper cubic centimeter\nper cubic decimeter\nper cubic decimeter\nper cubic foot\nper cubic foot\nper cubic inch\nper cubic inch\nper cubic kilometer\nper cubic kilometer\nper cubic meter\nper cubic meter\nper cubic mile\nper cubic mile\nper cubic millimeter\nper cubic millimeter\nper cubic yard\nper cubic yard\nper deciliter\nper deciliter\nper fluid ounce\nper fluid ounce\nper Imperial fluid ounce\nper Imperial fluid ounce\nper gallon\nper gallon\nper Imperial gallon\nper Imperial gallon\nper liter\nper liter\nper milliliter\nper milliliter\nUnit plural description.\nReturns the nearest integer to a number in the in given …\nUnit singular description.\nReturns the integer part of a number in the given …\nIterate over all defined units for this quantity.\nQuantity base units. See <code>Units</code>.\nQuantity value stored in the base units for the quantity.\nTrait to identify units which have a conversion factor for …\nDimension of volumetric number rate, L⁻³T⁻¹ (base …\nMarker trait to identify measurement units for the …\nUnit enum.\nVolumetric number rate (base unit 1 per cubic meter …\nUnit abbreviation.\nbecquerels per cubic meter\nbecquerels per cubic meter\nReturns the smallest integer less than or equal to a …\ncuries per cubic meter\ncuries per cubic meter\nQuantity description.\nQuantity dimension. See <code>Dimension</code>.\ndisintegrations per minute per cubic meter\ndisintegrations per minute per cubic meter\nReturns the largest integer less than or equal to a number …\nCreates a struct that can be used to format a compatible …\nReturns the fractional part of a number in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the value of the quantity in the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a struct that formats <code>self</code> for display.\nCreate a new quantity from the given value and measurement …\nper cubic centimeter second\nper cubic centimeter second\nper cubic foot second\nper cubic foot second\nper cubic inch second\nper cubic inch second\nper cubic meter second\nper cubic meter second\nper cubic mile second\nper cubic mile second\nper cubic millimeter second\nper cubic millimeter second\nper cubic yard second\nper cubic yard second\nper Imperial fluid ounce second\nper Imperial fluid ounce second\nper fluid ounce second\nper fluid ounce second\nper Imperial gallon second\nper Imperial gallon second\nper gallon second\nper gallon second\nper liter second\nper liter second\nper milliliter second\nper milliliter second\nUnit plural description.\nReturns the nearest integer to a number in the in given …\nUnit singular description.\nReturns the integer part of a number in the given …\nIterate over all defined units for this quantity.\nQuantity base units. See <code>Units</code>.\nQuantity value stored in the base units for the quantity.\nTrait to identify units which have a conversion factor for …\nDimension of volumetric power density, L⁻¹MT⁻³ (base …\nMarker trait to identify measurement units for the …\nUnit enum.\nVolumetric power density (base unit watt per cubic meter, …\nUnit abbreviation.\nReturns the smallest integer less than or equal to a …\nQuantity description.\nQuantity dimension. See <code>Dimension</code>.\nReturns the largest integer less than or equal to a number …\nCreates a struct that can be used to format a compatible …\nReturns the fractional part of a number in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the value of the quantity in the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a struct that formats <code>self</code> for display.\nCreate a new quantity from the given value and measurement …\nUnit plural description.\nReturns the nearest integer to a number in the in given …\nUnit singular description.\nReturns the integer part of a number in the given …\nIterate over all defined units for this quantity.\nQuantity base units. See <code>Units</code>.\nQuantity value stored in the base units for the quantity.\nwatts per cubic centimeter\nwatts per cubic centimeter\nwatts per cubic meter\nwatts per cubic meter\nwatts per cubic millimeter\nwatts per cubic millimeter\nNo separators (spaces) were encountered.\nRepresents an error encountered while parsing a string …\nThe unit used wasn’t found for this quantity.\nAn error occurred while parsing the value (first) portion …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")