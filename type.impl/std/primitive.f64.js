(function() {var type_impls = {
"serde":[],
"uom":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a></span><a href=\"#impl-Add%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/90080\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a></span><a href=\"#impl-Add-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a></span><a href=\"#impl-AddAssign%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a></span><a href=\"#impl-AddAssign-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#550-552\">source</a><a href=\"#impl-ConstZero-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"uom/trait.ConstZero.html\" title=\"trait uom::ConstZero\">ConstZero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#551\">source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"uom/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self = 0f64</h4></section></summary><div class='docblock'>Constant representing the zero value.</div></details></div></details>","ConstZero","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Conversion%3Cf64%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#521-536\">source</a><a href=\"#impl-Conversion%3Cf64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"uom/trait.Conversion.html\" title=\"trait uom::Conversion\">Conversion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.T\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.T\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"uom/trait.Conversion.html#associatedtype.T\" class=\"associatedtype\">T</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Conversion factor type specific to the underlying storage type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.constant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#525-530\">source</a><a href=\"#method.constant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"uom/trait.Conversion.html#method.constant\" class=\"fn\">constant</a>(op: <a class=\"enum\" href=\"uom/enum.ConstantOp.html\" title=\"enum uom::ConstantOp\">ConstantOp</a>) -&gt; Self::<a class=\"associatedtype\" href=\"uom/trait.Conversion.html#associatedtype.T\" title=\"type uom::Conversion::T\">T</a></h4></section></summary><div class='docblock'>Constant portion of <a href=\"https://jcgm.bipm.org/vim/en/1.24.html\">conversion factor</a> for\nconverting the given unit. To convert to the base unit for the quantity use <code>(value + constant()) * coefficient()</code>. To convert from the base unit, <code>(value / coefficient()) - constant()</code> is used. Implementation should return the additive identity (<code>Self::T::zero()</code>)\nif no constant exists. See <a href=\"uom/enum.ConstantOp.html\" title=\"enum uom::ConstantOp\"><code>ConstantOp</code></a> documentation for details about parameter use to\nensure the method optimizes correctly.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conversion\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#533-535\">source</a><a href=\"#method.conversion\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"uom/trait.Conversion.html#method.conversion\" class=\"fn\">conversion</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"uom/trait.Conversion.html#associatedtype.T\" title=\"type uom::Conversion::T\">T</a></h4></section></summary><div class='docblock'>Instance <a href=\"https://jcgm.bipm.org/vim/en/1.24.html\">conversion factor</a>. <a href=\"uom/trait.Conversion.html#method.conversion\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.coefficient\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#429-431\">source</a><a href=\"#method.coefficient\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"uom/trait.Conversion.html#method.coefficient\" class=\"fn\">coefficient</a>() -&gt; Self::<a class=\"associatedtype\" href=\"uom/trait.Conversion.html#associatedtype.T\" title=\"type uom::Conversion::T\">T</a></h4></section></summary><div class='docblock'>Coefficient portion of <a href=\"https://jcgm.bipm.org/vim/en/1.24.html\">conversion factor</a> for\nconverting the given unit. To convert to the base unit for the quantity use <code>(value + constant()) * coefficient()</code>. To convert from the base unit, <code>(value / coefficient()) - constant()</code> is used. Implementation should return the multiplicative identity\n(<code>Self::T::one()</code>) if no coefficient exists.</div></details></div></details>","Conversion<f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConversionFactor%3Cf64%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#538-548\">source</a><a href=\"#impl-ConversionFactor%3Cf64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"uom/trait.ConversionFactor.html\" title=\"trait uom::ConversionFactor\">ConversionFactor</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#540-542\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"uom/trait.ConversionFactor.html#tymethod.powi\" class=\"fn\">powi</a>(self, e: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Raises a <code>ConversionFactor&lt;V&gt;</code> to an integer power.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/lib.rs.html#545-547\">source</a><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"uom/trait.ConversionFactor.html#tymethod.value\" class=\"fn\">value</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Converts a <code>ConversionFactor&lt;V&gt;</code> into its underlying storage type.</div></details></div></details>","ConversionFactor<f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a></span><a href=\"#impl-Debug-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/default.rs.html#183\">source</a></span><a href=\"#impl-Default-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/default.rs.html#183\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0.0</code></p>\n</div></details></div></details>","Default","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a></span><a href=\"#impl-Display-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a></span><a href=\"#impl-Div%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CQuantity%3CD,+U,+f64%3E%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/uom/si/mod.rs.html#10-161\">source</a><a href=\"#impl-Div%3CQuantity%3CD,+U,+f64%3E%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;D, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Kind\" title=\"type uom::si::Dimension::Kind\">Kind</a>: <a class=\"trait\" href=\"uom/marker/trait.Div.html\" title=\"trait uom::marker::Div\">Div</a>,\n    U: <a class=\"trait\" href=\"uom/si/trait.Units.html\" title=\"trait uom::si::Units\">Units</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.L\" title=\"type uom::si::Dimension::L\">L</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.M\" title=\"type uom::si::Dimension::M\">M</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.T\" title=\"type uom::si::Dimension::T\">T</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.I\" title=\"type uom::si::Dimension::I\">I</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Th\" title=\"type uom::si::Dimension::Th\">Th</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.N\" title=\"type uom::si::Dimension::N\">N</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.J\" title=\"type uom::si::Dimension::J\">J</a>&gt;,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.L\" title=\"type uom::si::Dimension::L\">L</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.M\" title=\"type uom::si::Dimension::M\">M</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.T\" title=\"type uom::si::Dimension::T\">T</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.I\" title=\"type uom::si::Dimension::I\">I</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Th\" title=\"type uom::si::Dimension::Th\">Th</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.N\" title=\"type uom::si::Dimension::N\">N</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.J\" title=\"type uom::si::Dimension::J\">J</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;dyn <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&lt;I = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.I\" title=\"type uom::si::Dimension::I\">I</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, M = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.M\" title=\"type uom::si::Dimension::M\">M</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, N = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.N\" title=\"type uom::si::Dimension::N\">N</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, Th = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Th\" title=\"type uom::si::Dimension::Th\">Th</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, T = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.T\" title=\"type uom::si::Dimension::T\">T</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, L = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.L\" title=\"type uom::si::Dimension::L\">L</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, J = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.J\" title=\"type uom::si::Dimension::J\">J</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, Kind = &lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Kind\" title=\"type uom::si::Dimension::Kind\">Kind</a>&gt;, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/si/mod.rs.html#10-161\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;D, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Quantity<D, U, f64>>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a></span><a href=\"#impl-Div-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a></span><a href=\"#impl-DivAssign%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a></span><a href=\"#impl-DivAssign-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Float-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#impl-Float-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.nan\" class=\"fn\">nan</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the <code>NaN</code> value. <a href=\"num_traits/float/trait.Float.html#tymethod.nan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infinity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.infinity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.infinity\" class=\"fn\">infinity</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the infinite value. <a href=\"num_traits/float/trait.Float.html#tymethod.infinity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg_infinity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.neg_infinity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.neg_infinity\" class=\"fn\">neg_infinity</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the negative infinite value. <a href=\"num_traits/float/trait.Float.html#tymethod.neg_infinity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.neg_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.neg_zero\" class=\"fn\">neg_zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>-0.0</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.neg_zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the smallest finite value that this type can represent. <a href=\"num_traits/float/trait.Float.html#tymethod.min_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_positive_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.min_positive_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.min_positive_value\" class=\"fn\">min_positive_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the smallest positive, normalized value that this type can represent. <a href=\"num_traits/float/trait.Float.html#tymethod.min_positive_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.epsilon\" class=\"fn\">epsilon</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns epsilon, a small positive value. <a href=\"num_traits/float/trait.Float.html#method.epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the largest finite value that this type can represent. <a href=\"num_traits/float/trait.Float.html#tymethod.max_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The positive difference of two numbers. <a href=\"num_traits/float/trait.Float.html#tymethod.abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integer_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.integer_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.integer_decode\" class=\"fn\">integer_decode</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by <code>sign * mantissa * 2 ^ exponent</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.integer_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_nan\" class=\"fn\">is_nan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this value is <code>NaN</code> and false otherwise. <a href=\"num_traits/float/trait.Float.html#tymethod.is_nan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_infinite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_infinite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_infinite\" class=\"fn\">is_infinite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this value is positive infinity or negative infinity and\nfalse otherwise. <a href=\"num_traits/float/trait.Float.html#tymethod.is_infinite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_finite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_finite\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_normal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_normal\" class=\"fn\">is_normal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is neither zero, infinite,\n<a href=\"http://en.wikipedia.org/wiki/Subnormal_number\">subnormal</a>, or <code>NaN</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_normal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subnormal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_subnormal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.is_subnormal\" class=\"fn\">is_subnormal</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the number is <a href=\"https://en.wikipedia.org/wiki/Subnormal_number\">subnormal</a>. <a href=\"num_traits/float/trait.Float.html#method.is_subnormal\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.classify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.classify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.classify\" class=\"fn\">classify</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/num/enum.FpCategory.html\" title=\"enum core::num::FpCategory\">FpCategory</a></h4></section></summary><div class='docblock'>Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead. <a href=\"num_traits/float/trait.Float.html#tymethod.classify\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Clamps a value between a min and max. <a href=\"num_traits/float/trait.Float.html#method.clamp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the largest integer less than or equal to a number. <a href=\"num_traits/float/trait.Float.html#tymethod.floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the smallest integer greater than or equal to a number. <a href=\"num_traits/float/trait.Float.html#tymethod.ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the nearest integer to a number. Round half-way cases away from\n<code>0.0</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.round\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.trunc\" class=\"fn\">trunc</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Return the integer part of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.trunc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.fract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.fract\" class=\"fn\">fract</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the fractional part of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.fract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> if the\nnumber is <code>Float::nan()</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.signum\" class=\"fn\">signum</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns a number that represents the sign of <code>self</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_sign_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_positive\" class=\"fn\">is_sign_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>,\n<code>Float::infinity()</code>, and <code>Float::nan()</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_positive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sign_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.is_sign_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_negative\" class=\"fn\">is_sign_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>,\n<code>Float::neg_infinity()</code>, and <code>-Float::nan()</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.is_sign_negative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Fused multiply-add. Computes <code>(self * a) + b</code> with only one rounding\nerror, yielding a more accurate result than an unfused multiply-add. <a href=\"num_traits/float/trait.Float.html#tymethod.mul_add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.recip\" class=\"fn\">recip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Take the reciprocal (inverse) of a number, <code>1/x</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.recip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.powi\" class=\"fn\">powi</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Raise a number to an integer power. <a href=\"num_traits/float/trait.Float.html#tymethod.powi\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.powf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.powf\" class=\"fn\">powf</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Raise a number to a floating point power. <a href=\"num_traits/float/trait.Float.html#tymethod.powf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Take the square root of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.exp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.exp\" class=\"fn\">exp</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>e^(self)</code>, (the exponential function). <a href=\"num_traits/float/trait.Float.html#tymethod.exp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.exp2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.exp2\" class=\"fn\">exp2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>2^(self)</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.exp2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.ln\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.ln\" class=\"fn\">ln</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the natural logarithm of the number. <a href=\"num_traits/float/trait.Float.html#tymethod.ln\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.log\" class=\"fn\">log</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the logarithm of the number with respect to an arbitrary base. <a href=\"num_traits/float/trait.Float.html#tymethod.log\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.log2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.log2\" class=\"fn\">log2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the base 2 logarithm of the number. <a href=\"num_traits/float/trait.Float.html#tymethod.log2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.log10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.log10\" class=\"fn\">log10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the base 10 logarithm of the number. <a href=\"num_traits/float/trait.Float.html#tymethod.log10\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_degrees\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.to_degrees\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.to_degrees\" class=\"fn\">to_degrees</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Converts radians to degrees. <a href=\"num_traits/float/trait.Float.html#method.to_degrees\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_radians\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.to_radians\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.to_radians\" class=\"fn\">to_radians</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Converts degrees to radians. <a href=\"num_traits/float/trait.Float.html#method.to_radians\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the maximum of the two numbers. <a href=\"num_traits/float/trait.Float.html#tymethod.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the minimum of the two numbers. <a href=\"num_traits/float/trait.Float.html#tymethod.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.cbrt\" class=\"fn\">cbrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Take the cubic root of a number. <a href=\"num_traits/float/trait.Float.html#tymethod.cbrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.hypot\" class=\"fn\">hypot</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length <code>x</code> and <code>y</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.hypot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sin\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.sin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sin\" class=\"fn\">sin</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the sine of a number (in radians). <a href=\"num_traits/float/trait.Float.html#tymethod.sin\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.cos\" class=\"fn\">cos</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the cosine of a number (in radians). <a href=\"num_traits/float/trait.Float.html#tymethod.cos\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.tan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.tan\" class=\"fn\">tan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the tangent of a number (in radians). <a href=\"num_traits/float/trait.Float.html#tymethod.tan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.asin\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.asin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.asin\" class=\"fn\">asin</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1]. <a href=\"num_traits/float/trait.Float.html#tymethod.asin\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.acos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.acos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.acos\" class=\"fn\">acos</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1]. <a href=\"num_traits/float/trait.Float.html#tymethod.acos\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.atan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.atan\" class=\"fn\">atan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2]; <a href=\"num_traits/float/trait.Float.html#tymethod.atan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atan2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.atan2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.atan2\" class=\"fn\">atan2</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code> (<code>x</code>). <a href=\"num_traits/float/trait.Float.html#tymethod.atan2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sin_cos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.sin_cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sin_cos\" class=\"fn\">sin_cos</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Simultaneously computes the sine and cosine of the number, <code>x</code>. Returns\n<code>(sin(x), cos(x))</code>. <a href=\"num_traits/float/trait.Float.html#tymethod.sin_cos\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp_m1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.exp_m1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.exp_m1\" class=\"fn\">exp_m1</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>e^(self) - 1</code> in a way that is accurate even if the\nnumber is close to zero. <a href=\"num_traits/float/trait.Float.html#tymethod.exp_m1\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln_1p\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.ln_1p\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.ln_1p\" class=\"fn\">ln_1p</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if\nthe operations were performed separately. <a href=\"num_traits/float/trait.Float.html#tymethod.ln_1p\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sinh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.sinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.sinh\" class=\"fn\">sinh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Hyperbolic sine function. <a href=\"num_traits/float/trait.Float.html#tymethod.sinh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.cosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.cosh\" class=\"fn\">cosh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Hyperbolic cosine function. <a href=\"num_traits/float/trait.Float.html#tymethod.cosh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tanh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.tanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.tanh\" class=\"fn\">tanh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Hyperbolic tangent function. <a href=\"num_traits/float/trait.Float.html#tymethod.tanh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.asinh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.asinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.asinh\" class=\"fn\">asinh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Inverse hyperbolic sine function. <a href=\"num_traits/float/trait.Float.html#tymethod.asinh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.acosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.acosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.acosh\" class=\"fn\">acosh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Inverse hyperbolic cosine function. <a href=\"num_traits/float/trait.Float.html#tymethod.acosh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atanh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.atanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#tymethod.atanh\" class=\"fn\">atanh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Inverse hyperbolic tangent function. <a href=\"num_traits/float/trait.Float.html#tymethod.atanh\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copysign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/float.rs.html#2080\">source</a><a href=\"#method.copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/float/trait.Float.html#method.copysign\" class=\"fn\">copysign</a>(self, sign: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns a number composed of the magnitude of <code>self</code> and the sign of\n<code>sign</code>. <a href=\"num_traits/float/trait.Float.html#method.copysign\">Read more</a></div></details></div></details>","Float","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CQuantity%3Cdyn+Dimension%3CI+=+Z0,+J+=+Z0,+Kind+=+dyn+Kind,+L+=+Z0,+M+=+Z0,+N+=+Z0,+T+=+Z0,+Th+=+Z0%3E,+U,+f64%3E%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/uom/si/ratio.rs.html#168-176\">source</a><a href=\"#impl-From%3CQuantity%3Cdyn+Dimension%3CI+=+Z0,+J+=+Z0,+Kind+=+dyn+Kind,+L+=+Z0,+M+=+Z0,+N+=+Z0,+T+=+Z0,+Th+=+Z0%3E,+U,+f64%3E%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;dyn <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&lt;I = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, M = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, N = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, Th = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, T = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, L = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, J = <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>, Kind = dyn <a class=\"trait\" href=\"uom/trait.Kind.html\" title=\"trait uom::Kind\">Kind</a>&gt;, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"uom/si/trait.Units.html\" title=\"trait uom::si::Units\">Units</a>&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self: <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> + <a class=\"trait\" href=\"uom/trait.Conversion.html\" title=\"trait uom::Conversion\">Conversion</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/si/ratio.rs.html#173-175\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: <a class=\"type\" href=\"uom/si/ratio/type.Ratio.html\" title=\"type uom::si::ratio::Ratio\">Ratio</a>&lt;U, Self&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Quantity<dyn Dimension<I = Z0, M = Z0, N = Z0, Th = Z0, T = Z0, L = Z0, J = Z0, Kind = dyn Kind>, U, f64>>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.68.0\">1.68.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#202\">source</a></span><a href=\"#impl-From%3Cbool%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#202\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.\nThe resulting value is positive <code>0.0</code> for <code>false</code> and <code>1.0</code> for <code>true</code> values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: f64 = <span class=\"bool-val\">false</span>.into();\n<span class=\"macro\">assert_eq!</span>(x, <span class=\"number\">0.0</span>);\n<span class=\"macro\">assert!</span>(x.is_sign_positive());\n\n<span class=\"kw\">let </span>y: f64 = <span class=\"bool-val\">true</span>.into();\n<span class=\"macro\">assert_eq!</span>(y, <span class=\"number\">1.0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cf16%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#170\">source</a></span><a href=\"#impl-From%3Cf16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#170\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f16.html\" title=\"primitive f16\"><code>f16</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<f16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cf32%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#172\">source</a></span><a href=\"#impl-From%3Cf32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#172\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<f32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#157\">source</a></span><a href=\"#impl-From%3Ci16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#157\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<i16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#158\">source</a></span><a href=\"#impl-From%3Ci32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#158\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<i32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#155\">source</a></span><a href=\"#impl-From%3Ci8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#155\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<i8>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#164\">source</a></span><a href=\"#impl-From%3Cu16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#164\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<u16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#165\">source</a></span><a href=\"#impl-From%3Cu32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#165\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<u32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#162\">source</a></span><a href=\"#impl-From%3Cu8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#162\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a> to <a href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details>","From<u8>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#impl-FromPrimitive-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#573\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/dec2flt/mod.rs.html#164\">source</a></span><a href=\"#impl-FromStr-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/dec2flt/mod.rs.html#164\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/num/dec2flt/struct.ParseFloatError.html\" title=\"struct core::num::dec2flt::ParseFloatError\">ParseFloatError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a string in base 10 to a float.\nAccepts an optional decimal exponent.</p>\n<p>This function accepts strings such as</p>\n<ul>\n<li>‘3.14’</li>\n<li>‘-3.14’</li>\n<li>‘2.5E10’, or equivalently, ‘2.5e10’</li>\n<li>‘2.5E-10’</li>\n<li>‘5.’</li>\n<li>‘.5’, or, equivalently, ‘0.5’</li>\n<li>‘inf’, ‘-inf’, ‘+infinity’, ‘NaN’</li>\n</ul>\n<p>Note that alphabetical characters are not case-sensitive.</p>\n<p>Leading and trailing whitespace represent an error.</p>\n<h5 id=\"grammar\"><a class=\"doc-anchor\" href=\"#grammar\">§</a>Grammar</h5>\n<p>All strings that adhere to the following <a href=\"https://www.w3.org/TR/REC-xml/#sec-notation\">EBNF</a> grammar when\nlowercased will result in an <a href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok</code></a> being returned:</p>\n<div class=\"example-wrap\"><pre class=\"language-txt\"><code>Float  ::= Sign? ( &#39;inf&#39; | &#39;infinity&#39; | &#39;nan&#39; | Number )\nNumber ::= ( Digit+ |\n             Digit+ &#39;.&#39; Digit* |\n             Digit* &#39;.&#39; Digit+ ) Exp?\nExp    ::= &#39;e&#39; Sign? Digit+\nSign   ::= [+-]\nDigit  ::= [0-9]\n</code></pre></div><h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li>src - A string</li>\n</ul>\n<h5 id=\"return-value\"><a class=\"doc-anchor\" href=\"#return-value\">§</a>Return value</h5>\n<p><code>Err(ParseFloatError)</code> if the string did not represent a valid\nnumber. Otherwise, <code>Ok(n)</code> where <code>n</code> is the closest\nrepresentable floating-point number to the number represented\nby <code>src</code> (following the same rules for rounding as for the\nresults of primitive operations).</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/num/dec2flt/struct.ParseFloatError.html\" title=\"struct core::num::dec2flt::ParseFloatError\">ParseFloatError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a></span><a href=\"#impl-LowerExp-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a></span><a href=\"#impl-Mul%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CQuantity%3CD,+U,+f64%3E%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/uom/si/mod.rs.html#10-161\">source</a><a href=\"#impl-Mul%3CQuantity%3CD,+U,+f64%3E%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;D, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Kind\" title=\"type uom::si::Dimension::Kind\">Kind</a>: <a class=\"trait\" href=\"uom/marker/trait.Mul.html\" title=\"trait uom::marker::Mul\">Mul</a>,\n    U: <a class=\"trait\" href=\"uom/si/trait.Units.html\" title=\"trait uom::si::Units\">Units</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.L\" title=\"type uom::si::Dimension::L\">L</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.M\" title=\"type uom::si::Dimension::M\">M</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.T\" title=\"type uom::si::Dimension::T\">T</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.I\" title=\"type uom::si::Dimension::I\">I</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Th\" title=\"type uom::si::Dimension::Th\">Th</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.N\" title=\"type uom::si::Dimension::N\">N</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.J\" title=\"type uom::si::Dimension::J\">J</a>&gt;,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.L\" title=\"type uom::si::Dimension::L\">L</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.M\" title=\"type uom::si::Dimension::M\">M</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.T\" title=\"type uom::si::Dimension::T\">T</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.I\" title=\"type uom::si::Dimension::I\">I</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Th\" title=\"type uom::si::Dimension::Th\">Th</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.N\" title=\"type uom::si::Dimension::N\">N</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,\n    &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;D::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.J\" title=\"type uom::si::Dimension::J\">J</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"typenum/marker_traits/trait.Integer.html\" title=\"trait typenum::marker_traits::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;dyn <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&lt;I = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.I\" title=\"type uom::si::Dimension::I\">I</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, M = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.M\" title=\"type uom::si::Dimension::M\">M</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, N = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.N\" title=\"type uom::si::Dimension::N\">N</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, Th = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Th\" title=\"type uom::si::Dimension::Th\">Th</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, T = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.T\" title=\"type uom::si::Dimension::T\">T</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, L = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.L\" title=\"type uom::si::Dimension::L\">L</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, J = &lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.J\" title=\"type uom::si::Dimension::J\">J</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, Kind = &lt;D as <a class=\"trait\" href=\"uom/si/trait.Dimension.html\" title=\"trait uom::si::Dimension\">Dimension</a>&gt;::<a class=\"associatedtype\" href=\"uom/si/trait.Dimension.html#associatedtype.Kind\" title=\"type uom::si::Dimension::Kind\">Kind</a>&gt;, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/uom/si/mod.rs.html#10-161\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"uom/si/struct.Quantity.html\" title=\"struct uom::si::Quantity\">Quantity</a>&lt;D, U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Quantity<D, U, f64>>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a></span><a href=\"#impl-Mul-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a></span><a href=\"#impl-MulAssign%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a></span><a href=\"#impl-MulAssign-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701\">source</a></span><a href=\"#impl-Neg-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#392\">source</a><a href=\"#impl-Num-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#392\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.str.html\">str</a>,\n    radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" title=\"type num_traits::Num::FromStrRadixErr\">FromStrRadixErr</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#177\">source</a><a href=\"#impl-One-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#177\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#177\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502\">source</a></span><a href=\"#impl-PartialEq-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a></span><a href=\"#impl-PartialOrd-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26f32%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#161\">source</a><a href=\"#impl-Pow%3C%26f32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#161\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a f32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26f64%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#162\">source</a><a href=\"#impl-Pow%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#162\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i16%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#157\">source</a><a href=\"#impl-Pow%3C%26i16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#157\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a i16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i32%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#159\">source</a><a href=\"#impl-Pow%3C%26i32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#159\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a i32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i8%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#155\">source</a><a href=\"#impl-Pow%3C%26i8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#155\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a i8>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#158\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#158\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#156\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#156\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CNInt%3CU%3E%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#impl-Pow%3CNInt%3CU%3E%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<NInt<U>>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CPInt%3CU%3E%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#impl-Pow%3CPInt%3CU%3E%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<PInt<U>>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUInt%3CU,+B%3E%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#impl-Pow%3CUInt%3CU,+B%3E%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, B&gt; <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,\n    B: <a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UInt<U, B>>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUTerm%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#impl-Pow%3CUTerm%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt;::<a class=\"associatedtype\" href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UTerm>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CZ0%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#impl-Pow%3CZ0%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/type_operators.rs.html#188\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt;&gt;::<a class=\"associatedtype\" href=\"typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<Z0>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cf32%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#161\">source</a><a href=\"#impl-Pow%3Cf32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#161\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<f32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cf64%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#162\">source</a><a href=\"#impl-Pow%3Cf64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#162\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci16%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#157\">source</a><a href=\"#impl-Pow%3Ci16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#157\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci32%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#159\">source</a><a href=\"#impl-Pow%3Ci32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#159\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i32>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci8%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#155\">source</a><a href=\"#impl-Pow%3Ci8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#155\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i8>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#158\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#158\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#156\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#156\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a></span><a href=\"#impl-Product%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a></span><a href=\"#impl-Product-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a></span><a href=\"#impl-Rem%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a></span><a href=\"#impl-Rem-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"docblock\"><p>The remainder from the division of two floats.</p>\n<p>The remainder has the same sign as the dividend and is computed as:\n<code>x - (x / y).trunc() * y</code>.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: f32 = <span class=\"number\">50.50</span>;\n<span class=\"kw\">let </span>y: f32 = <span class=\"number\">8.125</span>;\n<span class=\"kw\">let </span>remainder = x - (x / y).trunc() * y;\n\n<span class=\"comment\">// The answer to both operations is 1.75\n</span><span class=\"macro\">assert_eq!</span>(x % y, remainder);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a></span><a href=\"#impl-RemAssign%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a></span><a href=\"#impl-RemAssign-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#154\">source</a><a href=\"#impl-Signed-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#154\">source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.abs\" class=\"fn\">abs</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute value. Returns <code>NAN</code> if the number is <code>NAN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#154\">source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>The positive difference of two numbers. Returns <code>0.0</code> if the number is\nless than or equal to <code>other</code>, otherwise the difference between<code>self</code>\nand <code>other</code> is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#154\">source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.signum\" class=\"fn\">signum</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<ul>\n<li><code>1.0</code> if the number is positive, <code>+0.0</code> or <code>INFINITY</code></li>\n<li><code>-1.0</code> if the number is negative, <code>-0.0</code> or <code>NEG_INFINITY</code></li>\n<li><code>NAN</code> if the number is NaN</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#154\">source</a><a href=\"#method.is_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is positive, including <code>+0.0</code> and <code>INFINITY</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#154\">source</a><a href=\"#method.is_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is negative, including <code>-0.0</code> and <code>NEG_INFINITY</code></p>\n</div></details></div></details>","Signed","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdElement-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#1165\">source</a><a href=\"#impl-SimdElement-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/core_simd/vector/trait.SimdElement.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i64.html\">i64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>)</span></div></span><div class='docblock'>The mask element type corresponding to this element type.</div></details></div></details>","SimdElement","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a></span><a href=\"#impl-Sub%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a></span><a href=\"#impl-Sub-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a></span><a href=\"#impl-SubAssign%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a></span><a href=\"#impl-SubAssign-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26f64%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a></span><a href=\"#impl-Sum%3C%26f64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a f64>","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a></span><a href=\"#impl-Sum-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/accum.rs.html#150\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#impl-ToPrimitive-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#375\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a></span><a href=\"#impl-UpperExp-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#230\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","uom::si::f64::V"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#72\">source</a><a href=\"#impl-Zero-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#72\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#72\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","uom::si::f64::V"],["<section id=\"impl-Copy-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/marker.rs.html#420-430\">source</a></span><a href=\"#impl-Copy-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","Copy","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Ci128%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Ci128%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<i128>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Ci16%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Ci16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<i16>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Ci32%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Ci32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<i32>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Ci64%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Ci64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<i64>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Ci8%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Ci8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<i8>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cisize%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cisize%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<isize>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cu128%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cu128%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<u128>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cu16%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cu16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<u16>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cu32%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cu32%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<u32>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cu64%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cu64%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<u64>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cu8%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cu8%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<u8>","uom::si::f64::V"],["<section id=\"impl-FloatToInt%3Cusize%3E-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#39\">source</a><a href=\"#impl-FloatToInt%3Cusize%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/num/trait.FloatToInt.html\" title=\"trait core::convert::num::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","FloatToInt<usize>","uom::si::f64::V"],["<section id=\"impl-SimdCast-for-f64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/cast.rs.html#51\">source</a><a href=\"#impl-SimdCast-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/core_simd/cast/trait.SimdCast.html\" title=\"trait core::core_simd::cast::SimdCast\">SimdCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.f64.html\">f64</a></h3></section>","SimdCast","uom::si::f64::V"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()