var searchIndex = new Map(JSON.parse('[["cu29",{"t":"PKFIPPPPPGKNNNNNNENNNCCCCNNNNNNNNNNNNNNMCNENNNNNNNNNFFFIFFNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNHNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNIIPFFGFPPPIIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNFFGFGPPPPPNNNNNNNNNNNONNNHOOONNNNNNNNNNNNONNNNNONOOOOOONNNNNNNNNNNNNNNNFFKKKKKKRRRROONNNNNNNNNNNNNNNNNNNOMNONNMMMNNNNNNNNNNFJFNNNNNNNNNNNNNNNNNNNNNN","n":["CopperList","CopperListPayload","CuError","CuResult","Empty","Err","LastEntry","Ok","StructuredLogLine","UnifiedLogType","WriteStream","add_cause","borrow","","borrow_decode","borrow_mut","","clock","clone","clone_into","clone_to_uninit","config","copperlist","curuntime","cutask","decode","deserialize","encode","eq","flush","fmt","","","from","","","","into","","log","monitoring","new_with_cause","read_configuration","serialize","to_owned","to_string","try_from","","try_into","","type_id","","Cnx","CuConfig","Node","NodeId","NodeInstanceConfig","Value","add_node","batch","borrow","","","","","borrow_mut","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","connect","connect_ext","default","","deserialize","","","","","deserialize_ron","fmt","","","","","","","from","","","","","","","","","","","get","get_all_instances_configs","get_all_nodes","get_dst_edges","get_edge_weight","get_id","get_instance_config","get_node","get_param","get_src_edges","get_type","graph","into","","","","","msg","new","","read_configuration","render","serialize","","","","","serialize_ron","set","set_param","set_type","store","to_owned","","","","to_string","","try_from","","","","","try_into","","","","","type_id","","","","","AscIter","AscIterMut","BeingSerialized","CopperLiskMask","CopperList","CopperListState","CuListsManager","DoneProcessing","Free","Initialized","Iter","IterMut","Processing","asc_iter","asc_iter_mut","borrow","","","","borrow_decode","","","borrow_mut","","","","change_state","clear","clone","","clone_into","","clone_to_uninit","","create","decode","","","encode","","","eq","","fmt","","","","","from","","","","get_state","id","into","","","","is_empty","is_full","iter","iter_mut","len","new","","payload","peek","pop","serialize","to_owned","","to_string","try_from","","","","try_into","","","","type_id","","","","CuExecutionLoop","CuExecutionStep","CuExecutionUnit","CuRuntime","CuTaskType","Loop","Regular","Sink","Source","Step","available_copper_lists","borrow","","","","","borrow_mut","","","","","clock","clone","clone_into","clone_to_uninit","compute_runtime_plan","copper_lists_manager","culist_input_index","culist_output_index","end_of_processing","eq","equivalent","","","fmt","from","","","","","get_clock","input_msg_type","into","","","","","loop_count","new","node","node_id","output_msg_type","steps","task_instances","task_type","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","CuMsg","CuMsgMetadata","CuMsgPayload","CuSinkTask","CuSrcTask","CuTask","CuTaskLifecycle","Freezable","Input","","Output","","after_process","before_process","borrow","","borrow_decode","","borrow_mut","","decode","","default","encode","","fmt","","","freeze","from","","into","","metadata","new","","payload","postprocess","preprocess","process","","","start","stop","thaw","to_string","try_from","","try_into","","type_id","","CountingAllocator","GLOBAL","ScopedAllocCounter","alloc","borrow","","borrow_mut","","dealloc","drop","from","","get_allocated","get_deallocated","into","","new","","reset","try_from","","try_into","","type_id",""],"q":[[0,"cu29"],[52,"cu29::config"],[163,"cu29::copperlist"],[247,"cu29::curuntime"],[318,"cu29::cutask"],[370,"cu29::monitoring"],[395,"cu29_traits"],[396,"bincode::error"],[397,"core::result"],[398,"bincode::de"],[399,"serde::de"],[400,"bincode::enc"],[401,"core::fmt"],[402,"alloc::string"],[403,"core::error"],[404,"serde::ser"],[405,"core::any"],[406,"core::option"],[407,"core::convert"],[408,"alloc::vec"],[409,"std::io"],[410,"cu29_clock"],[411,"core::ops::function"],[412,"core::alloc::layout"]],"i":"j```0Dn101``b02202`222````2022An1131113130`1`131131313``````BnChCdCfC`3421034210321032103442421034422110342111111103424444004040421034320`42103442003210321210342103421034``F`````000``0Ed00En2Ef13021300213131321301301321330213000213022222200223133213021302130`````I`Fn001Fl0IbG`43210432333`211233333210432121043021110213210432104321043````````HfHhHb2Gh00Gj101010110110Gn21211H`22004650013323232```Hj0Hn1010101110101101010","f":"```````````{{b{f{d}}}b}{f{{f{c}}}{}}0{{{f{hc}}}{{n{jl}}}A`}{{{f{h}}}{{f{hc}}}{}}0`{{{f{j}}}j}{{f{f{hc}}}Ab{}}{fAb}````{{{f{hc}}}{{n{jl}}}Ad}{c{{n{b}}}Af}{{{f{j}}{f{hc}}}{{n{AbAh}}}Aj}{{{f{j}}{f{j}}}Al}{{{f{hAn}}}{{n{Abb}}}}{{{f{b}}{f{hB`}}}{{n{AbBb}}}}0{{{f{j}}{f{hB`}}}{{n{AbBb}}}}{Bdb}{{{f{d}}}b}{cc{}}0{{}c{}}0{{{f{hAn}}{f{c}}}{{n{Abb}}}Bf}`{{{f{d}}c}bBh}`{{{f{b}}c}nBj}{fc{}}{fBd}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{fBl}0``````{{{f{hBn}}C`}Cb}`{f{{f{c}}}{}}0000{{{f{h}}}{{f{hc}}}{}}0000{{{f{Cd}}}Cd}{{{f{Cf}}}Cf}{{{f{C`}}}C`}{{{f{Ch}}}Ch}{{f{f{hc}}}Ab{}}000{fAb}000{{{f{hBn}}CbCb{f{d}}}Ab}{{{f{hBn}}CbCb{f{d}}{Cl{Cj}}{Cl{Al}}}Ab}{{}Cd}{{}Bn}{c{{n{Cd}}}Af}{c{{n{Cf}}}Af}{c{{n{C`}}}Af}{c{{n{Ch}}}Af}{c{{n{Bn}}}Af}{{{f{d}}}Bn}{{{f{Cd}}{f{hB`}}}Cn}0{{{f{Cf}}{f{hB`}}}Cn}0{{{f{C`}}{f{hB`}}}Cn}{{{f{Ch}}{f{hB`}}}Cn}{{{f{Bn}}{f{hB`}}}Cn}{cc{}}{BdCf}{D`Cf}{DbCf}{DdCf}{CjCf}{DfCf}6666{{{f{Cd}}{f{d}}}{{Cl{c}}}{{Dh{Cf}}}}{{{f{Bn}}}{{Dj{{Cl{{f{Cd}}}}}}}}{{{f{Bn}}}{{Dj{{f{C`}}}}}}{{{f{Bn}}Cb}{{Dj{Dl}}}}{{{f{Bn}}Dl}{{Cl{Ch}}}}{{{f{C`}}}Bd}{{{f{C`}}}{{Cl{{f{Cd}}}}}}{{{f{Bn}}Cb}{{Cl{{f{C`}}}}}}{{{f{C`}}{f{d}}}{{Cl{c}}}{{Dh{Cf}}}}5{{{f{C`}}}{{f{d}}}}`{{}c{}}0000`{{}Cd}{{{f{d}}{f{d}}}C`}{{{f{d}}}{{Dn{Bn}}}}{{{f{Bn}}{f{hE`}}}Ab}{{{f{Cd}}c}nBj}{{{f{Cf}}c}nBj}{{{f{C`}}c}nBj}{{{f{Ch}}c}nBj}{{{f{Bn}}c}nBj}{{{f{Bn}}}Bd}{{{f{hCd}}{f{d}}c}Ab{{Eb{Cf}}}}{{{f{hC`}}{f{d}}c}Ab{{Eb{Cf}}}}{{C`{Cl{Bd}}}C`}`{fc{}}000{fBd}0{c{{n{e}}}{}{}}0000{{}{{n{c}}}{}}0000{fBl}0000`````````````{{{f{{Ed{c}}}}}{{Eh{{Ef{c}}}}}Ej}{{{f{h{Ed{c}}}}}{{El{{Ef{c}}}}}Ej}{f{{f{c}}}{}}000{{{f{hc}}}{{n{Enl}}}A`}{{{f{hc}}}{{n{F`l}}}A`}{{{f{hc}}}{{n{{Ef{e}}l}}}A`{FbEj}}{{{f{h}}}{{f{hc}}}{}}000{{{f{h{Ef{c}}}}F`}AbEj}{{{f{h{Ed{c}}}}}AbEj}{{{f{En}}}En}{{{f{F`}}}F`}{{f{f{hc}}}Ab{}}0{fAb}0{{{f{h{Ed{c}}}}}{{Cl{{f{h{Ef{c}}}}}}}Ej}{{{f{hc}}}{{n{Enl}}}Ad}{{{f{hc}}}{{n{F`l}}}Ad}{{{f{hc}}}{{n{{Ef{e}}l}}}Ad{FdEj}}{{{f{En}}{f{hc}}}{{n{AbAh}}}Aj}{{{f{F`}}{f{hc}}}{{n{AbAh}}}Aj}{{{f{{Ef{c}}}}{f{he}}}{{n{AbAh}}}{BfEj}Aj}{{{f{En}}{f{En}}}Al}{{{f{F`}}{f{F`}}}Al}{{{f{{Ed{c}}}}{f{hB`}}}Cn{EjFf}}{{{f{En}}{f{hB`}}}Cn}{{{f{F`}}{f{hB`}}}Cn}0{{{f{{Ef{c}}}}{f{hB`}}}Cn{FfEj}}{cc{}}000{{{f{{Ef{c}}}}}F`Ej}`{{}c{}}000{{{f{{Ed{c}}}}}AlEj}0{{{f{{Ed{c}}}}}{{Fh{{Ef{c}}}}}Ej}{{{f{h{Ed{c}}}}}{{Fj{{Ef{c}}}}}Ej}{{{f{{Ed{c}}}}}DlEj}{{}{{Ed{c}}}Ej}{{Cjc}{{Ef{c}}}Ej}`{{{f{{Ed{c}}}}}{{Cl{{f{{Ef{c}}}}}}}Ej}{{{f{h{Ed{c}}}}}{{Cl{{f{h{Ef{c}}}}}}}Ej}{{{f{F`}}c}nBj}{fc{}}0{fBd}{c{{n{e}}}{}{}}000{{}{{n{c}}}{}}000{fBl}000``````````{{{f{{Fl{ce}}}}}Dl{}Ej}{f{{f{c}}}{}}0000{{{f{h}}}{{f{hc}}}{}}0000`{{{f{Fn}}}Fn}{{f{f{hc}}}Ab{}}{fAb}{{{f{Bn}}}{{Dn{G`}}}}```{{{f{h{Fl{ce}}}}Cj}Ab{}Ej}{{{f{Fn}}{f{Fn}}}Al}{{f{f{c}}}Al{}}00{{{f{Fn}}{f{hB`}}}Cn}{cc{}}0000{{{f{{Fl{ce}}}}}Gb{}Ej}`{{}c{}}0000`{{Gb{f{Bn}}ei}{{Dn{{Fl{cg}}}}}{}{{Gf{{Dj{{Cl{{f{Cd}}}}}}}{{Gd{{Dn{c}}}}}}}Ej{{An{{Ef{g}}}}}}``````{fc{}}{c{{n{e}}}{}{}}0000{{}{{n{c}}}{}}0000{fBl}0000``````````````{f{{f{c}}}{}}0{{{f{hc}}}{{n{Ghl}}}A`}{{{f{hc}}}{{n{{Gj{e}}l}}}A`{GlFb}}{{{f{h}}}{{f{hc}}}{}}0{{{f{hc}}}{{n{Ghl}}}Ad}{{{f{hc}}}{{n{{Gj{e}}l}}}Ad{GlFd}}{{}Gh}{{{f{Gh}}{f{hc}}}{{n{AbAh}}}Aj}{{{f{{Gj{c}}}}{f{he}}}{{n{AbAh}}}{GlBf}Aj}{{{f{Gh}}{f{hB`}}}Cn}0{{{f{{Gj{c}}}}{f{hB`}}}Cn{GlFf}}{{{f{Gn}}{f{hc}}}{{n{AbAh}}}Aj}{cc{}}0{{}c{}}0`{{{Cl{{f{Cd}}}}}{{Dn{H`}}}}{c{{Gj{c}}}Gl}`{{{f{hH`}}{f{Gb}}}{{Dn{Ab}}}}0{{{f{h{Hb{}{{Gd{c}}}}}}{f{Gb}}{f{h{Gj{c}}}}}{{Dn{Ab}}}Gl}{{{f{h{Hf{}{{Hd{c}}{Gd{e}}}}}}{f{Gb}}{f{{Gj{c}}}}{f{h{Gj{e}}}}}{{Dn{Ab}}}GlGl}{{{f{h{Hh{}{{Hd{c}}}}}}{f{Gb}}{f{h{Gj{c}}}}}{{Dn{Ab}}}Gl}33{{{f{hGn}}{f{hc}}}{{n{Abl}}}Ad}{fBd}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{fBl}0```{{{f{Hj}}Hl}Db}{f{{f{c}}}{}}0{{{f{h}}}{{f{hc}}}{}}0{{{f{Hj}}DbHl}Ab}{{{f{hHn}}}Ab}{cc{}}0{{{f{Hj}}}Dl}0{{}c{}}0{{}Hj}{{}Hn}{{{f{Hj}}}Ab}==<<;;","D":"Ob","p":[[5,"CuError",0,395],[1,"str"],[1,"reference"],[0,"mut"],[6,"UnifiedLogType",0,395],[6,"DecodeError",396],[6,"Result",397],[10,"BorrowDecoder",398],[1,"unit"],[10,"Decoder",398],[10,"Deserializer",399],[6,"EncodeError",396],[10,"Encoder",400],[1,"bool"],[10,"WriteStream",0,395],[5,"Formatter",401],[5,"Error",401],[5,"String",402],[10,"Encode",400],[10,"Error",403],[10,"Serializer",404],[5,"TypeId",405],[5,"CuConfig",52],[5,"Node",52],[8,"NodeId",52],[5,"NodeInstanceConfig",52],[5,"Value",52],[5,"Cnx",52],[1,"u32"],[6,"Option",406],[8,"Result",401],[1,"f64"],[1,"u8"],[1,"u16"],[1,"i32"],[10,"From",407],[5,"Vec",408],[1,"usize"],[8,"CuResult",0,395],[10,"Write",409],[10,"Into",407],[5,"CuListsManager",163],[5,"CopperList",163],[8,"AscIter",163],[10,"CopperListPayload",0,395],[8,"AscIterMut",163],[5,"CopperLiskMask",163],[6,"CopperListState",163],[10,"BorrowDecode",398],[10,"Decode",398],[10,"Debug",401],[8,"Iter",163],[8,"IterMut",163],[5,"CuRuntime",247],[6,"CuTaskType",247],[5,"CuExecutionLoop",247],[5,"RobotClock",410],[17,"Output"],[10,"Fn",411],[5,"CuMsgMetadata",318],[5,"CuMsg",318],[10,"CuMsgPayload",318],[10,"Freezable",318],[10,"CuTaskLifecycle",318],[10,"CuSrcTask",318],[17,"Input"],[10,"CuTask",318],[10,"CuSinkTask",318],[5,"CountingAllocator",370],[5,"Layout",412],[5,"ScopedAllocCounter",370],[6,"CuExecutionUnit",247],[5,"CuExecutionStep",247]],"r":[[1,395],[2,395],[3,395],[9,395],[10,395],[42,52]],"b":[[30,"impl-Display-for-CuError"],[31,"impl-Debug-for-CuError"],[33,"impl-From%3CString%3E-for-CuError"],[34,"impl-From%3C%26str%3E-for-CuError"],[92,"impl-Debug-for-NodeInstanceConfig"],[93,"impl-Display-for-NodeInstanceConfig"],[94,"impl-Debug-for-Value"],[95,"impl-Display-for-Value"],[100,"impl-From%3CString%3E-for-Value"],[101,"impl-From%3Cf64%3E-for-Value"],[102,"impl-From%3Cu8%3E-for-Value"],[103,"impl-From%3Cu16%3E-for-Value"],[104,"impl-From%3Cu32%3E-for-Value"],[105,"impl-From%3Ci32%3E-for-Value"],[208,"impl-Display-for-CopperListState"],[209,"impl-Debug-for-CopperListState"],[343,"impl-Debug-for-CuMsgMetadata"],[344,"impl-Display-for-CuMsgMetadata"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABIBKwAAAAEABAABAAcAAAAJAAAADAAJABoACQAoAAAAKgAKAD0AFQBVAAUAXAAHAGUABQBvAAEAcwACAHcAAAB5AAEAgQABAIUAAwCKAAMAjwAXAKgAAACrAAUAswALAMAAEwDYAAEA4wACAOcAEAD9AA8ADgECABUBBQAgAQAAJwEBACwBAAAvAQ8AQQEAAEcBAwBNAQ0AYQEBAGwBBgB0AQAAdgEGAH8BAQCDAQgA"}],["cu29_clock",{"t":"KFIFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ClockProvider","CuDuration","CuTime","Instant","OptionCuTime","RobotClock","RobotClockMock","add","","add_assign","borrow","","","","","borrow_decode","","borrow_mut","","","","","checked_add","checked_duration_since","checked_sub","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","decode","","decrement","default","","","deserialize","div","duration_since","elapsed","encode","","eq","","","fmt","","","","","","","from","","","","","","","","from_ref_time","get_clock","increment","into","","","","","","","","","is_none","mock","new","none","now","","partial_cmp","","recent","","saturating_duration_since","serialize","set_value","sub","","","sub_assign","to_owned","","","","","to_string","","try_from","","","","","try_into","","","","","type_id","","","","","unwrap","value"],"q":[[0,"cu29_clock"],[125,"quanta::instant"],[126,"core::time"],[127,"bincode::error"],[128,"core::result"],[129,"bincode::de"],[130,"core::option"],[131,"core::cmp"],[132,"serde::de"],[133,"core::convert"],[134,"bincode::enc"],[135,"core::fmt"],[136,"serde::ser"],[137,"alloc::string"],[138,"core::any"]],"i":"```````bd01AdAhAj34242103333421034210342103434204214433424234422103444221031Cd1Cb6664432543343565355626555643256464325643256432542","f":"```````{{bb}c{}}{{df}d}{{{j{hd}}f}l}{j{{j{c}}}{}}0000{{{j{hc}}}{{A`{bn}}}Ab}{{{j{hc}}}{{A`{Adn}}}Ab}{{{j{h}}}{{j{hc}}}{}}0000{{{j{d}}f}{{Af{d}}}}{{{j{d}}d}{{Af{f}}}}1{{{j{b}}}b}{{{j{Ad}}}Ad}{{{j{Ah}}}Ah}{{{j{Aj}}}Aj}{{{j{d}}}d}{{j{j{hc}}}l{}}0000{jl}0000{{{j{b}}{j{b}}}Al}{{{j{d}}{j{d}}}Al}{{{j{hc}}}{{A`{bn}}}An}{{{j{hc}}}{{A`{Adn}}}An}{{{j{Aj}}f}l}{{}b}{{}Ad}{{}Ah}{c{{A`{b}}}B`}{{bc}b{{Bd{Bb}}}}{{{j{d}}d}f}{{{j{d}}}f}{{{j{b}}{j{hc}}}{{A`{lBf}}}Bh}{{{j{Ad}}{j{hc}}}{{A`{lBf}}}Bh}{{{j{b}}{j{b}}}Bj}{{{j{Ad}}{j{Ad}}}Bj}{{{j{d}}{j{d}}}Bj}{{{j{b}}{j{hBl}}}Bn}0{{{j{Ad}}{j{hBl}}}Bn}0{{{j{Ah}}{j{hBl}}}Bn}{{{j{Aj}}{j{hBl}}}Bn}{{{j{d}}{j{hBl}}}{{A`{lC`}}}}{Bbb}{cc{}}{fb}{{{Af{Cb}}}Ad}2222{BbAh}{{{j{Cd}}}Ah}{{{j{Aj}}f}l}{CbAd}{bBb}{{}c{}}{bf}1{Ad{{Af{Cb}}}}222{{{j{Ad}}}Bj}{{}{{Cf{AhAj}}}}{{}Ah}{{}Ad}{{{j{Ah}}}Cb}{{}d}{{{j{b}}{j{b}}}{{Af{Al}}}}{{{j{d}}{j{d}}}{{Af{Al}}}}32{{{j{d}}d}f}{{{j{b}}c}A`Ch}{{{j{Aj}}Bb}l}{{bb}c{}}{{df}d}{{dd}f}{{{j{hd}}f}l}{jc{}}0000{jCj}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{jCl}0000{AdCb}{{{j{Aj}}}Bb}","D":"Db","p":[[5,"CuDuration",0],[5,"Instant",0,125],[5,"Duration",126],[0,"mut"],[1,"reference"],[1,"unit"],[6,"DecodeError",127],[6,"Result",128],[10,"BorrowDecoder",129],[5,"OptionCuTime",0],[6,"Option",130],[5,"RobotClock",0],[5,"RobotClockMock",0],[6,"Ordering",131],[10,"Decoder",129],[10,"Deserializer",132],[1,"u64"],[10,"Into",133],[6,"EncodeError",127],[10,"Encoder",134],[1,"bool"],[5,"Formatter",135],[8,"Result",135],[5,"Error",135],[8,"CuTime",0],[10,"ClockProvider",0],[1,"tuple"],[10,"Serializer",136],[5,"String",137],[5,"TypeId",138]],"r":[[3,125]],"b":[[57,"impl-Display-for-CuDuration"],[58,"impl-Debug-for-CuDuration"],[59,"impl-Debug-for-OptionCuTime"],[60,"impl-Display-for-OptionCuTime"],[64,"impl-From%3Cu64%3E-for-CuDuration"],[66,"impl-From%3CDuration%3E-for-CuDuration"],[76,"impl-Into%3Cu64%3E-for-CuDuration"],[78,"impl-Into%3CDuration%3E-for-CuDuration"],[98,"impl-Sub%3CDuration%3E-for-Instant"],[99,"impl-Sub-for-Instant"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFwAEAAAAAAACAAAAAoADAAaABIALgAEADUADABDAAEASgADAE8AAABRAAAAVQAAAFgAAQBbAAIAYAAAAGIAAQBlABcA"}],["cu29_derive",{"t":"XQ","n":["copper_runtime","gen_culist_payload"],"q":[[0,"cu29_derive"]],"i":"``","f":"``","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAgA="}],["cu29_export",{"t":"GPGPPPFNNNNNNNNNNNNNNNONNHNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNONNNNNOO","n":["Command","Csv","ExportFormat","ExtractCopperlist","ExtractLog","Json","LogReaderCli","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","cmp","command","","command_for_update","compare","copperlists_dump","eq","equivalent","","","fmt","from","","","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","into","","","partial_cmp","run_cli","textlog_dump","to_owned","to_possible_value","to_string","try_from","","","try_into","","","type_id","","","unifiedlog_base","update_from_arg_matches","","update_from_arg_matches_mut","","value_variants","export_format","log_index"],"q":[[0,"cu29_export"],[64,"cu29_export::Command"],[66,"clap_builder::builder::command"],[67,"core::cmp"],[68,"cu29::copperlist"],[69,"core::iter::traits::iterator"],[70,"std::io"],[71,"cu29_traits"],[72,"core::fmt"],[73,"clap_builder::parser::matches::arg_matches"],[74,"clap_builder"],[75,"core::result"],[76,"clap_builder::util::id"],[77,"core::option"],[78,"std::path"],[79,"clap_builder::builder::possible_value"],[80,"alloc::string"],[81,"core::any"]],"i":"`h`Bf01`B`01120120122220002`222222010101012012``222201201201001012CjCl","f":"```````{bb}000{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{h}}}h}{{d{d{fc}}}j{}}{dj}{{{d{h}}{d{h}}}l}{{}b}`0{{d{d{c}}}l{}}{c{{`{{Ab{}{{n{{A`{e}}}}}}}}}AdAf}{{{d{h}}{d{h}}}Ah}{{d{d{c}}}Ah{}}00{{{d{h}}{d{fAj}}}Al}{cc{}}00{{{d{An}}}{{Bd{B`Bb}}}}{{{d{An}}}{{Bd{BfBb}}}}{{{d{fAn}}}{{Bd{B`Bb}}}}{{{d{fAn}}}{{Bd{BfBb}}}}{{}{{Bj{Bh}}}}{{{d{Bl}}}Ah}{{}c{}}00{{{d{h}}{d{h}}}{{Bj{l}}}}{{}{{Bn{j}}}}{{c{d{C`}}}{{Bn{j}}}Ad}{dc{}}{{{d{h}}}{{Bj{Cb}}}}{dCd}{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{dCf}00`{{{d{fB`}}{d{An}}}{{Bd{jBb}}}}{{{d{fBf}}{d{An}}}{{Bd{jBb}}}}{{{d{fB`}}{d{fAn}}}{{Bd{jBb}}}}{{{d{fBf}}{d{fAn}}}{{Bd{jBb}}}}{{}{{d{{Ch{h}}}}}}``","D":"Aj","p":[[5,"Command",66],[1,"reference"],[0,"mut"],[6,"ExportFormat",0],[1,"unit"],[6,"Ordering",67],[17,"Item"],[5,"CopperList",68],[10,"Iterator",69],[10,"Read",70],[10,"CopperListPayload",71],[1,"bool"],[5,"Formatter",72],[8,"Result",72],[5,"ArgMatches",73],[5,"LogReaderCli",0],[8,"Error",74],[6,"Result",75],[6,"Command",0],[5,"Id",76],[6,"Option",77],[1,"str"],[8,"CuResult",71],[5,"Path",78],[5,"PossibleValue",79],[5,"String",80],[5,"TypeId",81],[1,"slice"],[15,"ExtractCopperlist",64],[15,"ExtractLog",64]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADUACAAAAAMABgAAAAgAEQAbAAQAIwAFACwAAAAvAAsAPAAGAA=="}],["cu29_helpers",{"t":"FHNNONNONNNO","n":["CopperContext","basic_copper_setup","borrow","borrow_mut","clock","from","into","logger_runtime","try_from","try_into","type_id","unified_logger"],"q":[[0,"cu29_helpers"],[12,"std::path"],[13,"core::option"],[14,"cu29_traits"],[15,"core::result"],[16,"core::any"]],"i":"``l000000000","f":"`{{{d{b}}{h{f}}j}{{n{l}}}}{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}`{cc{}}{{}c{}}`{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dAd}`","D":"h","p":[[5,"Path",12],[1,"reference"],[1,"usize"],[6,"Option",13],[1,"bool"],[5,"CopperContext",0],[8,"CuResult",14],[0,"mut"],[6,"Result",15],[5,"TypeId",16]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAwAAAAAAAwACAAgABAA="}],["cu29_intern_strs",{"t":"H","n":["read_interned_strings"],"q":[[0,"cu29_intern_strs"],[1,"std::path"],[2,"alloc::string"],[3,"alloc::vec"],[4,"cu29_traits"]],"i":"`","f":"{{{d{b}}}{{j{{h{f}}}}}}","D":"b","p":[[5,"Path",1],[1,"reference"],[5,"String",2],[5,"Vec",3],[8,"CuResult",4]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["cu29_log",{"t":"SFSNNNNHNNNNNHNNONOOHNONNNNE","n":["ANONYMOUS","CuLogEntry","MAX_LOG_PARAMS_ON_STACK","add_param","borrow","borrow_mut","decode","default_log_index_dir","deserialize","encode","eq","fmt","","format_logline","from","into","msg_index","new","paramname_indexes","params","rebuild_logline","serialize","time","to_string","try_from","try_into","type_id","value"],"q":[[0,"cu29_log"],[28,"cu29_value"],[29,"bincode::error"],[30,"core::result"],[31,"bincode::de"],[32,"std::path"],[33,"serde::de"],[34,"bincode::enc"],[35,"core::fmt"],[36,"cu29_clock"],[37,"alloc::string"],[38,"std::collections::hash::map"],[39,"cu29_traits"],[40,"alloc::vec"],[41,"serde::ser"],[42,"core::any"]],"i":"```d000`00000`000000`000000`","f":"```{{{f{bd}}hj}l}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{bc}}}{{A`{dn}}}Ab}{{}Ad}{c{{A`{d}}}Af}{{{f{d}}{f{bc}}}{{A`{lAh}}}Aj}{{{f{d}}{f{d}}}Al}{{{f{d}}{f{bAn}}}B`}0{{Bb{f{Bd}}{f{{Bh{Bf}}}}{f{{Bj{BfBf}}}}}{{Bl{Bf}}}}{cc{}}{{}c{}}`{hd}``{{{f{{Bn{Bf}}}}{f{d}}}{{Bl{Bf}}}}{{{f{d}}c}A`C`}`{fBf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fCb}`","D":"A`","p":[[0,"mut"],[5,"CuLogEntry",0],[1,"reference"],[1,"u32"],[6,"Value",28],[1,"unit"],[6,"DecodeError",29],[6,"Result",30],[10,"Decoder",31],[5,"PathBuf",32],[10,"Deserializer",33],[6,"EncodeError",29],[10,"Encoder",34],[1,"bool"],[5,"Formatter",35],[8,"Result",35],[8,"CuTime",36],[1,"str"],[5,"String",37],[1,"slice"],[5,"HashMap",38],[8,"CuResult",39],[5,"Vec",40],[10,"Serializer",41],[5,"TypeId",42]],"r":[],"b":[[11,"impl-Debug-for-CuLogEntry"],[12,"impl-Display-for-CuLogEntry"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQABwAAAAEAAwAAAAUAAgAJAAQAEQAAABMAAQAWAAYA"}],["cu29_log_derive",{"t":"Q","n":["debug"],"q":[[0,"cu29_log_derive"]],"i":"`","f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["cu29_log_runtime",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNNNNNNN","n":["LoggerRuntime","NullLog","OwningIoWriter","SimpleFileWriter","borrow","","","","borrow_mut","","","","bytes_written","drop","enabled","flush","","","","fmt","from","","","","init","into","","","","log","","","log_debug_mode","new","","try_from","","","","try_into","","","","type_id","","","","write"],"q":[[0,"cu29_log_runtime"],[48,"std::io"],[49,"log"],[50,"bincode::error"],[51,"core::result"],[52,"cu29_traits"],[53,"core::fmt"],[54,"cu29_clock"],[55,"core::option"],[56,"cu29_log"],[57,"std::path"],[58,"core::any"]],"i":"````A`lfAj321012332100321023210`30`103210321032101","f":"````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{{f{c}}}}}hj}{{{b{dl}}}n}{{{b{A`}}{b{Ab}}}Ad}{{{b{A`}}}n}{{{b{l}}}n}{{{b{d{f{c}}}}}{{Ah{nAf}}}j}{{{b{dAj}}}{{Al{n}}}}{{{b{Aj}}{b{dAn}}}B`}{cc{}}000{{Bbc{Bd{e}}}l{{Bh{Bf}}}Bj}{{}c{}}000{{{b{dBf}}}{{Al{n}}}}{{{b{A`}}{b{Bl}}}n}{{{b{dAj}}{b{Bf}}}{{Al{n}}}}{{{b{dBf}}{b{Bn}}{b{{C`{{b{Bn}}}}}}}{{Al{n}}}}{c{{f{c}}}j}{{{b{Cb}}}{{Al{Aj}}}}{c{{Ah{e}}}{}{}}000{{}{{Ah{c}}}{}}000{bCd}000{{{b{d{f{c}}}}{b{{C`{Cf}}}}}{{Ah{nAf}}}j}","D":"Aj","p":[[1,"reference"],[0,"mut"],[5,"OwningIoWriter",0],[1,"usize"],[10,"Write",48],[5,"LoggerRuntime",0],[1,"unit"],[5,"NullLog",0],[5,"Metadata",49],[1,"bool"],[6,"EncodeError",50],[6,"Result",51],[5,"SimpleFileWriter",0],[8,"CuResult",52],[5,"Formatter",53],[8,"Result",53],[5,"RobotClock",54],[6,"Option",55],[5,"CuLogEntry",56],[10,"WriteStream",52],[10,"Log",49],[5,"Record",49],[1,"str"],[1,"slice"],[5,"PathBuf",57],[5,"TypeId",58],[1,"u8"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMABQAAAAAAAgABAAUADwAfAAEAIgAOAA=="}],["cu29_rendercfg",{"t":"FPKFIPPPPPGKNNNNNNNNNNONNNNNCONNNNNNNNNNNNNNNNNNNMHONONNNNNNNNNNNNNNFFFFIFFNONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNONNHNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNONNNNNN","n":["Args","CopperList","CopperListPayload","CuError","CuResult","Empty","Err","LastEntry","Ok","StructuredLogLine","UnifiedLogType","WriteStream","add_cause","augment_args","augment_args_for_update","borrow","","","borrow_decode","borrow_mut","","","cause","clone","clone_into","clone_to_uninit","command","command_for_update","config","","decode","deserialize","encode","eq","flush","fmt","","","from","","","","","from_arg_matches","from_arg_matches_mut","group_id","into","","","log","main","message","new_with_cause","open","serialize","to_owned","to_string","try_from","","","try_into","","","type_id","","","update_from_arg_matches","update_from_arg_matches_mut","Cnx","CuConfig","CuConfigRepresentation","Node","NodeId","NodeInstanceConfig","Value","add_node","batch","borrow","","","","","","borrow_mut","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","cnx","config","connect","connect_ext","default","","","deserialize","","","","","","deserialize_ron","dst","fmt","","","","","","","from","","","","","","","","","","","","get","get_all_instances_configs","get_all_nodes","get_dst_edges","get_edge_weight","get_id","get_instance_config","get_node","get_options","get_param","get_src_edges","get_type","graph","id","into","","","","","","into_resettable","msg","new","","read_configuration","render","serialize","","","","","","serialize_ron","set","set_param","set_type","src","store","tasks","to_owned","","","","to_string","","try_from","","","","","","try_into","","","","","","type_","type_id","","","","",""],"q":[[0,"cu29_rendercfg"],[68,"cu29_rendercfg::config"],[199,"cu29_traits"],[200,"clap_builder::builder::command"],[201,"bincode::error"],[202,"core::result"],[203,"bincode::de"],[204,"serde::de"],[205,"bincode::enc"],[206,"core::fmt"],[207,"alloc::string"],[208,"clap_builder::parser::matches::arg_matches"],[209,"clap_builder"],[210,"clap_builder::util::id"],[211,"core::option"],[212,"std::io::error"],[213,"core::error"],[214,"serde::ser"],[215,"core::any"],[216,"core::convert"],[217,"alloc::vec"],[218,"ron::options"],[219,"clap_builder::builder::resettable"],[220,"std::io"]],"i":"`l```0En101``bBj01303130133300`03133B`224222411112410`22124224124124111```````ClDfDbDdCn34Dh3214503214321432140155350321450543322145322222221450355551155151513214502431`532145053114403214323214503214501321450","f":"````````````{{b{f{d}}}b}{hh}0{f{{f{c}}}{}}00{{{f{jc}}}{{A`{ln}}}Ab}{{{f{j}}}{{f{jc}}}{}}00`{{{f{l}}}l}{{f{f{jc}}}Ad{}}{fAd}{{}h}0``{{{f{jc}}}{{A`{ln}}}Af}{c{{A`{b}}}Ah}{{{f{l}}{f{jc}}}{{A`{AdAj}}}Al}{{{f{l}}{f{l}}}An}{{{f{jB`}}}{{A`{Adb}}}}{{{f{b}}{f{jBb}}}{{A`{AdBd}}}}0{{{f{l}}{f{jBb}}}{{A`{AdBd}}}}{cc{}}{Bfb}{{{f{d}}}b}22{{{f{Bh}}}{{A`{BjBl}}}}{{{f{jBh}}}{{A`{BjBl}}}}{{}{{C`{Bn}}}}{{}c{}}00{{{f{jB`}}{f{c}}}{{A`{Adb}}}Cb}{{}{{Cd{Ad}}}}`{{{f{d}}c}bCf}`{{{f{b}}c}A`Ch}{fc{}}{fBf}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fCj}00{{{f{jBj}}{f{Bh}}}{{A`{AdBl}}}}{{{f{jBj}}{f{jBh}}}{{A`{AdBl}}}}```````{{{f{jCl}}Cn}D`}`{f{{f{c}}}{}}00000{{{f{j}}}{{f{jc}}}{}}00000{{{f{Db}}}Db}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{Df}}}Df}{{f{f{jc}}}Ad{}}000{fAd}000``{{{f{jCl}}D`D`{f{d}}}Ad}{{{f{jCl}}D`D`{f{d}}{C`{D`}}{C`{An}}}Ad}{{}Db}{{}Cl}{{}Dh}{c{{A`{Db}}}Ah}{c{{A`{Dd}}}Ah}{c{{A`{Cn}}}Ah}{c{{A`{Df}}}Ah}{c{{A`{Cl}}}Ah}{c{{A`{Dh}}}Ah}{{{f{d}}}Cl}`{{{f{Db}}{f{jBb}}}Dj}0{{{f{Dd}}{f{jBb}}}Dj}0{{{f{Cn}}{f{jBb}}}Dj}{{{f{Df}}{f{jBb}}}Dj}{{{f{Cl}}{f{jBb}}}Dj}{cc{}}{D`Dd}{DlDd}2{BfDd}{DnDd}{E`Dd}{EbDd}6666{{{f{Db}}{f{d}}}{{C`{c}}}{{Ed{Dd}}}}{{{f{Cl}}}{{Ef{{C`{{f{Db}}}}}}}}{{{f{Cl}}}{{Ef{{f{Cn}}}}}}{{{f{Cl}}D`}{{Ef{Eh}}}}{{{f{Cl}}Eh}{{C`{Df}}}}{{{f{Cn}}}Bf}{{{f{Cn}}}{{C`{{f{Db}}}}}}{{{f{Cl}}D`}{{C`{{f{Cn}}}}}}{{}Ej}{{{f{Cn}}{f{d}}}{{C`{c}}}{{Ed{Dd}}}}6{{{f{Cn}}}{{f{d}}}}``{{}c{}}00000{{}{{El{Bf}}}}`{{}Db}{{{f{d}}{f{d}}}Cn}{{{f{d}}}{{En{Cl}}}}{{{f{Cl}}{f{jF`}}}Ad}{{{f{Db}}c}A`Ch}{{{f{Dd}}c}A`Ch}{{{f{Cn}}c}A`Ch}{{{f{Df}}c}A`Ch}{{{f{Cl}}c}A`Ch}{{{f{Dh}}c}A`Ch}{{{f{Cl}}}Bf}{{{f{jDb}}{f{d}}c}Ad{{Fb{Dd}}}}{{{f{jCn}}{f{d}}c}Ad{{Fb{Dd}}}}{{Cn{C`{Bf}}}Cn}```{fc{}}000{fBf}0{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000`{fCj}00000","D":"Fd","p":[[5,"CuError",0,199],[1,"str"],[1,"reference"],[5,"Command",200],[0,"mut"],[6,"UnifiedLogType",0,199],[6,"DecodeError",201],[6,"Result",202],[10,"BorrowDecoder",203],[1,"unit"],[10,"Decoder",203],[10,"Deserializer",204],[6,"EncodeError",201],[10,"Encoder",205],[1,"bool"],[10,"WriteStream",0,199],[5,"Formatter",206],[5,"Error",206],[5,"String",207],[5,"ArgMatches",208],[5,"Args",0],[8,"Error",209],[5,"Id",210],[6,"Option",211],[10,"Encode",205],[8,"Result",212],[10,"Error",213],[10,"Serializer",214],[5,"TypeId",215],[5,"CuConfig",68],[5,"Node",68],[1,"u32"],[5,"NodeInstanceConfig",68],[5,"Value",68],[5,"Cnx",68],[5,"CuConfigRepresentation",68],[8,"Result",206],[1,"i32"],[1,"u16"],[1,"f64"],[1,"u8"],[10,"From",216],[5,"Vec",217],[1,"usize"],[5,"Options",218],[6,"Resettable",219],[8,"CuResult",0,199],[10,"Write",220],[10,"Into",216]],"r":[[2,199],[3,199],[4,199],[10,199],[11,199]],"b":[[35,"impl-Debug-for-CuError"],[36,"impl-Display-for-CuError"],[39,"impl-From%3CString%3E-for-CuError"],[40,"impl-From%3C%26str%3E-for-CuError"],[116,"impl-Display-for-NodeInstanceConfig"],[117,"impl-Debug-for-NodeInstanceConfig"],[118,"impl-Debug-for-Value"],[119,"impl-Display-for-Value"],[124,"impl-From%3Cu32%3E-for-Value"],[125,"impl-From%3Ci32%3E-for-Value"],[127,"impl-From%3CString%3E-for-Value"],[128,"impl-From%3Cu16%3E-for-Value"],[129,"impl-From%3Cf64%3E-for-Value"],[130,"impl-From%3Cu8%3E-for-Value"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJUAGQAAAAIABQABAAgAAAAKAAAADQAPAB8ABwAoAAEALAACADIAAAA0AAEANwANAE4AGQBqAAYAcgAJAH0AAQCAAAMAiAABAIwAAgCQAAEAkwACAJwAAACeAAEAogADAKcABACuABkA"}],["cu29_soa_derive",{"t":"X","n":["soa"],"q":[[0,"cu29_soa_derive"]],"i":"`","f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["cu29_traits",{"t":"PKFIPPPPPGKNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNN","n":["CopperList","CopperListPayload","CuError","CuResult","Empty","Err","LastEntry","Ok","StructuredLogLine","UnifiedLogType","WriteStream","add_cause","borrow","","borrow_decode","borrow_mut","","clone","clone_into","clone_to_uninit","decode","deserialize","encode","eq","flush","fmt","","","from","","","","into","","log","new_with_cause","serialize","to_owned","to_string","try_from","","try_into","","type_id",""],"q":[[0,"cu29_traits"],[45,"bincode::error"],[46,"core::result"],[47,"bincode::de"],[48,"serde::de"],[49,"bincode::enc"],[50,"core::fmt"],[51,"alloc::string"],[52,"core::error"],[53,"serde::ser"],[54,"core::any"]],"i":"j```0B`101``b022022222022An11311131301131131313","f":"```````````{{b{f{d}}}b}{f{{f{c}}}{}}0{{{f{hc}}}{{n{jl}}}A`}{{{f{h}}}{{f{hc}}}{}}0{{{f{j}}}j}{{f{f{hc}}}Ab{}}{fAb}{{{f{hc}}}{{n{jl}}}Ad}{c{{n{b}}}Af}{{{f{j}}{f{hc}}}{{n{AbAh}}}Aj}{{{f{j}}{f{j}}}Al}{{{f{hAn}}}{{B`{Ab}}}}{{{f{b}}{f{hBb}}}Bd}0{{{f{j}}{f{hBb}}}Bd}{Bfb}{cc{}}{{{f{d}}}b}1{{}c{}}0{{{f{hAn}}{f{c}}}{{B`{Ab}}}Bh}{{{f{d}}c}bBj}{{{f{b}}c}nBl}{fc{}}{fBf}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{fBn}0","D":"Ad","p":[[5,"CuError",0],[1,"str"],[1,"reference"],[0,"mut"],[6,"UnifiedLogType",0],[6,"DecodeError",45],[6,"Result",46],[10,"BorrowDecoder",47],[1,"unit"],[10,"Decoder",47],[10,"Deserializer",48],[6,"EncodeError",45],[10,"Encoder",49],[1,"bool"],[10,"WriteStream",0],[8,"CuResult",0],[5,"Formatter",50],[8,"Result",50],[5,"String",51],[10,"Encode",49],[10,"Error",52],[10,"Serializer",53],[5,"TypeId",54]],"r":[],"b":[[25,"impl-Debug-for-CuError"],[26,"impl-Display-for-CuError"],[28,"impl-From%3CString%3E-for-CuError"],[30,"impl-From%3C%26str%3E-for-CuError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMABwAAAAEABAABAAcAAAAJAAAADAARAB8AAAAjAAoA"}],["cu29_unifiedlog",{"t":"GPPPFFGFFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AllocatedSection","NoMoreSpace","Read","Section","SectionHandle","SectionHeader","UnifiedLogger","UnifiedLoggerBuilder","UnifiedLoggerIOReader","UnifiedLoggerRead","UnifiedLoggerWrite","Write","borrow","","","","","","","","borrow_decode","borrow_mut","","","","","","","","build","create","","decode","default","","drop","encode","file_base_name","flush_section","fmt","from","","","","","","","","get_user_buffer","into","","","","","","","","new","","","preallocated_size","read","read_next_section_type","read_section","stream_write","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","update_header","write"],"q":[[0,"cu29_unifiedlog"],[91,"bincode::error"],[92,"core::result"],[93,"bincode::de"],[94,"std::io::error"],[95,"bincode::enc"],[96,"std::path"],[97,"core::fmt"],[98,"cu29_traits"],[99,"alloc::vec"],[100,"core::option"],[101,"std::sync::mutex"],[102,"alloc::sync"],[103,"core::any"]],"i":"`DfA`1```````00nBn3AjAnCbf06547321055303020520654732103654732105415144`65473210654732106547321035","f":"````````````{b{{b{c}}}{}}0000000{{{b{dc}}}{{j{fh}}}l}{{{b{d}}}{{b{dc}}}{}}0000000{n{{Ab{A`}}}}{{nAd}n}{{f{b{d{Ah{Af}}}}}Aj}{{{b{dc}}}{{j{fh}}}Al}{{}Aj}{{}f}{{{b{dAn}}}B`}{{{b{f}}{b{dc}}}{{j{B`Bb}}}Bd}{{n{b{Bf}}}n}{{{b{dAn}}{b{dAj}}}B`}{{{b{f}}{b{dBh}}}Bj}{cc{}}0000000{{{b{dAj}}}{{b{d{Ah{Af}}}}}}{{}c{}}0000000{{}n}{{{b{Bl}}}{{Ab{Bn}}}}{{BnC`}Cb}{{nCd}n}{{{b{dCb}}{b{d{Ah{Af}}}}}{{Ab{Cd}}}}{{{b{dBn}}C`}{{Cj{{Ch{{Cf{Af}}}}}}}}{{{b{dBn}}}{{Cj{{Cf{Af}}}}}}{{{Cn{{Cl{An}}}}C`Cd}{{`{{D`{c}}}}}Db}{c{{j{e}}}{}{}}0000000{{}{{j{c}}}{}}0000000{bDd}0000000{{{b{dAj}}}B`}{{nAd}n}","D":"Cd","p":[[1,"reference"],[0,"mut"],[5,"SectionHeader",0],[6,"DecodeError",91],[6,"Result",92],[10,"BorrowDecoder",93],[5,"UnifiedLoggerBuilder",0],[6,"UnifiedLogger",0],[8,"Result",94],[1,"bool"],[1,"u8"],[1,"slice"],[5,"SectionHandle",0],[10,"Decoder",93],[5,"UnifiedLoggerWrite",0],[1,"unit"],[6,"EncodeError",91],[10,"Encoder",95],[5,"Path",96],[5,"Formatter",97],[8,"Result",97],[5,"PathBuf",96],[5,"UnifiedLoggerRead",0],[6,"UnifiedLogType",98],[5,"UnifiedLoggerIOReader",0],[1,"usize"],[5,"Vec",99],[6,"Option",100],[8,"CuResult",98],[5,"Mutex",101],[5,"Arc",102],[10,"WriteStream",98],[10,"Encode",95],[5,"TypeId",103],[6,"AllocatedSection",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEEABgAAAAQADAAZACcAAQAxAAAAOgAFAEIAGQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[10553,3537,196,2598,686,350,1636,167,1677,5884,165,1807,2495]}